/**
 * Formatter
 *
 * This module takes a parse tree (AST) and converts it back into formatted source code.
 * It handles proper indentation, spacing, and line breaks to make the output look nice.
 */
type ASTNode = {
    type: string;
    [key: string]: any;
};
interface FormatOptions {
    indentSize?: number;
    useSpaces?: boolean;
    maxLineLength?: number;
}
/**
 * Format a parse tree into formatted source code
 *
 * @param parseTree - The parse tree nodes from the parser
 * @param options - Formatting options
 * @returns Formatted source code
 */
export declare function format(parseTree: ASTNode[] | ASTNode, options?: FormatOptions): string;
/**
 * Format source code by tokenizing, parsing, and then formatting
 *
 * @param sourceCode - The source code to format
 * @param options - Formatting options
 * @returns Formatted source code
 */
export declare function formatSourceCode(sourceCode: string, options?: FormatOptions): string;
export {};
//# sourceMappingURL=formatter.d.ts.map